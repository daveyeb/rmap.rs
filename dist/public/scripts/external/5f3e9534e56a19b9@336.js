function _1(t){return t`<div style="color: grey; font: 13px/25.5px var(--sans-serif); text-transform: uppercase;"><h1 style="display: none;">Inline labels</h1><a href="https://d3js.org/">D3</a> › <a href="/@d3/gallery">Gallery</a></div>

# Inline labels

This [multi-line chart](/@d3/multi-line-chart) places a label at each data point to show the value in lieu of a *y*-axis. Inspired by [Ann K. Emery’s Excel tutorial](https://depictdatastudio.com/how-to-place-labels-directly-through-your-line-graph-in-microsoft-excel/).`}function _chart(t,e){const a=928,r=500,n=t.scaleUtc().domain([e[0].date,e[e.length-1].date]).range([30,878]),l=t.scaleLinear().domain([0,t.max(e,(t=>t.value))]).range([470,30]),i=t.scaleOrdinal().domain(e.map((t=>t.fruit))).range(t.schemeCategory10),o=t.create("svg").attr("width",a).attr("height",r).attr("viewBox",[0,0,a,r]).attr("style","max-width: 100%; height: auto; font: 10px sans-serif;");o.append("g").attr("transform","translate(0,470)").call(t.axisBottom(n).ticks(11.6).tickSizeOuter(0));const s=o.append("g").selectAll().data(t.group(e,(t=>t.fruit))).join("g");return s.append("path").attr("fill","none").attr("stroke",(t=>i(t[0]))).attr("stroke-width",1.5).attr("d",(e=>t.line().x((t=>n(t.date))).y((t=>l(t.value)))(e[1]))),s.append("g").attr("stroke-linecap","round").attr("stroke-linejoin","round").attr("text-anchor","middle").selectAll().data((t=>t[1])).join("text").text((t=>t.value)).attr("dy","0.35em").attr("x",(t=>n(t.date))).attr("y",(t=>l(t.value))).call((t=>t.filter(((t,e,a)=>e===a.length-1)).append("tspan").attr("font-weight","bold").text((t=>` ${t.fruit}`)))).clone(!0).lower().attr("fill","none").attr("stroke","white").attr("stroke-width",6),o.node()}async function _fruit(t){return t.flatMap((t=>data.columns.slice(1).map((e=>({date:t.task,fruit:e,value:t[e]})))))}function _4(t){return t`Create this chart with [Observable Plot](https://observablehq.com/plot)’s concise API by adding a [line mark](/plot/marks/line) and a [text mark](/plot/marks/text):`}function _5(t,e,a){return t.plot({height:250,width:a,x:{line:!0,insetRight:40},y:{domain:[-5,500],axis:null},style:{background:"none"},marks:[t.line(e,{x:"task",y:"value",stroke:"name"}),t.text(e,{x:"task",y:"value",text:"value",fill:"currentColor",stroke:"white",strokeWidth:8}),t.text(e,t.selectLast({x:"task",y:"value",text:"name",z:"name",textAnchor:"start",dx:12,fontWeight:"bold"}))]})}export default function define(t,e){const a=t.module();return a.variable(e()).define(["Plot","stats","width"],_5),a}